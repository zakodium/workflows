name: Release a Node.js package

on:
  workflow_call:
    inputs:
      github-app-id:
        description: >
          The id of a GitHub app used to publish the release. The `github-app-key`
          secret is mandatory when this is set.
        type: string
        required: false
      npm:
        description: >
          Pass `true` to enable the npm publish steps. In that case, the `npm-token`
          or `github-token` (or both) secret is mandatory.
        type: boolean
        default: false
        required: false
      node-version:
        description: Version of Node.js used to run the npm publish steps.
        type: string
        default: 24.x
        required: false
      npm-setup-command:
        description: Command used to setup the package before publishing to npm.
        type: string
        default: <auto>
        required: false
      public:
        description: >
          This option only affects scoped packages.
          Whether the package will be published to the public npm registry. If `false`,
          the package will be published only to the GitHub Package Registry (GPR).
          When publishing to GPR, the `github-token` must have the `packages: write` permission.
        type: boolean
        default: false
        required: false
      release-type:
        description: >
          Option passed to the release-please action.
          Set to the empty string to use a release manifest config.
        type: string
        default: node
        required: false
    secrets:
      github-token:
        required: false
      github-app-key:
        required: false
      npm-token:
        required: false

jobs:
  release-please:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      npm-final-setup-command: ${{ steps.get-command.outputs.npm-final-setup-command }}
      publish_github: ${{ steps.extract-registries.outputs.publish_github }}
      publish_npm: ${{ steps.extract-registries.outputs.publish_npm }}
    steps:
      - uses: actions/checkout@v5
      - name: Get package name
        run: echo "PACKAGE_NAME=$(jq .name package.json | tr -d '"')" >> $GITHUB_ENV
      - name: Generate a token for release-please
        if: ${{ inputs.github-app-id }}
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ inputs.github-app-id }}
          private-key: ${{ secrets.github-app-key }}
          permission-contents: write
          permission-issues: write
          permission-pull-requests: write
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ steps.generate-token.outputs.token || secrets.github-token }}
          release-type: ${{ inputs.release-type }}
      - name: Get npm setup command
        id: get-command
        if: ${{ steps.release.outputs.release_created }}
        run: |
          SETUP_COMMAND="${{ inputs.npm-setup-command }}"
          if [ "$SETUP_COMMAND" = "<auto>" ]; then
            if [ -f "package-lock.json" ]; then
              SETUP_COMMAND="npm ci"
            else
              SETUP_COMMAND="npm install"
            fi
          fi
          echo "npm-final-setup-command=$SETUP_COMMAND" >> $GITHUB_OUTPUT
      - name: Extract registries to publish
        id: extract-registries
        if: ${{ steps.release.outputs.release_created }}
        env:
          IS_PUBLIC: ${{ inputs.public }}
        run: |
          # If the PACKAGE_NAME starts with @, it's a scoped package.
          # In that case, we need to publish to the GitHub Package Registry and
          # optionally to the public npm registry (when IS_PUBLIC is true).
          if [[ $PACKAGE_NAME == @* ]]; then
            if [ "$IS_PUBLIC" = "true" ]; then
              echo "publish_github=true" >> $GITHUB_OUTPUT
              echo "publish_npm=true" >> $GITHUB_OUTPUT
            else
              echo "publish_github=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "publish_npm=true" >> $GITHUB_OUTPUT
          fi
  publish-package:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created && inputs.npm && (needs.release-please.outputs.publish_npm=='true' || needs.release-please.outputs.publish_github=='true') }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        include:
          - id: npm
            enabled: ${{ needs.release-please.outputs.publish_npm=='true' }}
            registry-url: 'https://registry.npmjs.org'
          - id: github
            enabled: ${{ needs.release-please.outputs.publish_github=='true' }}
            registry-url: 'https://npm.pkg.github.com'
    name: publish-package-${{ matrix.id }}
    steps:
      - uses: actions/checkout@v5
        if: ${{ matrix.enabled }}
      - uses: actions/setup-node@v4
        if: ${{ matrix.enabled }}
        with:
          node-version: ${{ inputs.node-version }}
          registry-url: ${{ matrix.registry-url }}
      - name: Run npm setup command
        if: ${{ matrix.enabled }}
        run: ${{ needs.release-please.outputs.npm-final-setup-command }}
        env:
          NODE_AUTH_TOKEN: ${{ matrix.id=='github' && secrets.github-token || '' }}
      - name: Publish package to npm
        if: ${{ matrix.enabled && matrix.id=='npm' }}
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm-token }}
      - name: Publish package to GitHub Package Registry
        if: ${{ matrix.enabled && matrix.id=='github' }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.github-token }}
