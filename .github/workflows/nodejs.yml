name: Node.js CI

on:
  workflow_call:
    inputs:
      node-version:
        description: Version of Node.js used to run the lint steps.
        type: string
        default: 20.x
        required: false
      npm-setup-command:
        description: Command used to setup the package before running other steps.
        type: string
        default: <auto>
        required: false
      lint-eslint:
        description: Whether to run the `eslint` npm script.
        type: boolean
        default: true
        required: false
      lint-prettier:
        description: Whether to run the `prettier` npm script.
        type: boolean
        default: true
        required: false
      lint-check-types:
        description: >
          Whether to run the `check-types` npm script. This should be set to
          `true` for TypeScript projects.
        type: boolean
        default: false
        required: false
      disable-tests:
        description: Disable the test matrix.
        type: boolean
        default: false
        required: false
      node-version-matrix:
        description: Versions of Node.js to test on, as a JSON array.
        type: string
        default: '[18, 20, 22, 23]'
        required: false
      test-setup-command:
        description: > 
          Command used to setup the package before running npm tests. Will run
          between `npm-setup-command` and `npm-test-command`.
        type: string
        required: false
      npm-test-command:
        description: Command used to run the tests.
        type: string
        default: npm run test-only
        required: false
      upload-coverage:
        description: >
          Whether to run the Codecov action to upload coverage data.
          This requires to pass the `codecov-token` secret for private repos.
        type: string
        default: <auto>
        required: false
    secrets:
      codecov-token:
        required: false

jobs:
  prepare:
    if: ${{ inputs.lint-eslint || inputs.lint-prettier || inputs.lint-check-types || !inputs.disable-tests }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      final-npm-setup-command: ${{ steps.get-command.outputs.final-npm-setup-command }}
      final-upload-coverage: ${{ steps.check-codecov.outputs.final-upload-coverage }}
    steps:
      - uses: actions/checkout@v4
      - name: Get npm setup command
        id: get-command
        run: |
          SETUP_COMMAND="${{ inputs.npm-setup-command }}"
          if [ "$SETUP_COMMAND" = "<auto>" ]; then
            if [ -f "package-lock.json" ]; then
              SETUP_COMMAND="npm ci"
            else
              SETUP_COMMAND="npm install"
            fi
          fi
          echo "final-npm-setup-command=$SETUP_COMMAND" >> $GITHUB_OUTPUT
      - name: Check Codecov settings
        id: check-codecov
        run: |
          UPLOAD_COVERAGE="${{ inputs.upload-coverage }}"
          REPO_VISIBILITY=$(gh repo view --json visibility -q .visibility || echo "NOT_FOUND")
          echo "Repository visibility is $REPO_VISIBILITY"
          if [ "$UPLOAD_COVERAGE" = "<auto>" ]; then
            if [ "$REPO_VISIBILITY" = "PUBLIC" ]; then
              UPLOAD_COVERAGE="true"
            else
              UPLOAD_COVERAGE="false"
            fi
          fi
          echo "Upload coverage set to $UPLOAD_COVERAGE"
          if [ "$REPO_VISIBILITY" != "PUBLIC" ] && [ "$UPLOAD_COVERAGE" = "true" ] && [ "${{ secrets.codecov-token }}" = "" ]; then
            echo "The 'codecov-token' secret must be passed in order to upload coverage data for private repositories."
            exit 1
          fi
          echo "final-upload-coverage=$UPLOAD_COVERAGE" >> $GITHUB_OUTPUT
  lint-eslint:
    if: ${{ inputs.lint-eslint }}
    needs: prepare
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
      - name: Run npm setup command
        run: ${{ needs.prepare.outputs.final-npm-setup-command }}
      - name: Run ESLint
        run: npm run eslint
  lint-prettier:
    if: ${{ inputs.lint-prettier }}
    needs: prepare
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
      - name: Run npm setup command
        run: ${{ needs.prepare.outputs.final-npm-setup-command }}
      - name: Run Prettier
        run: npm run prettier
  lint-check-types:
    if: ${{ inputs.lint-check-types }}
    needs: prepare
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
      - name: Run npm setup command
        run: ${{ needs.prepare.outputs.final-npm-setup-command }}
      - name: Check types
        run: npm run check-types
  test:
    if: ${{ !inputs.disable-tests }}
    needs: prepare
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        node-version: ${{ fromJson(inputs.node-version-matrix) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Run npm setup command
        run: ${{ needs.prepare.outputs.final-npm-setup-command }}
      - name: Run test setup command
        if: ${{ inputs.test-setup-command }}
        run: ${{ inputs.test-setup-command }}
      - name: Run tests
        run: ${{ inputs.npm-test-command }}
      - name: Send coverage report to Codecov
        if: ${{ needs.prepare.outputs.final-upload-coverage == "true" }}
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          token: ${{ secrets.codecov-token }}
